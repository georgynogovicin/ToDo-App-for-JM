{"version":3,"sources":["components/new-task-form/index.js","components/new-task-form/new-task-form.js","components/header/index.js","components/header/header.js","components/task/index.js","components/task/task.js","components/task-list/index.js","components/task-list/task-list.js","components/filters/index.js","components/filters/filters.js","components/footer/index.js","components/footer/footer.js","components/app/index.js","components/app/app.js","index.js"],"names":["NewTaskForm","state","label","onLabelChange","event","setState","target","value","onKeyDown","code","props","addItem","className","placeholder","autoFocus","onChange","this","Component","Header","Task","addingDate","id","done","editing","itemDestroy","onToggleDone","itemEdit","taskClass","type","onClick","formatDistanceToNow","defaultValue","TaskList","todos","items","val","filter","item","filterValue","map","Filters","onFilterClick","changeFilter","innerText","Footer","todoCount","clearComplete","App","currentId","todoData","createTodoItem","text","newItem","reduce","acc","push","idx","findIndex","oldItem","slice","Date","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.342ad511.chunk.js","sourcesContent":["import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;","import React, { Component } from 'react';\nimport \"./new-task-form.css\";\n\nexport default class NewTaskForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (event) => {\n        this.setState({\n            label: event.target.value\n        });\n    };\n\n    onKeyDown = (event) => {\n        if (event.code === 'Enter') {\n            if (this.state.label !== '') {\n                this.props.addItem(this.state.label);\n                this.setState({\n                label: ''\n            })\n            }\n        }\n    };\n\n\n    render () {\n\n        return (\n            <input className=\"new-todo\" \n                    placeholder='What needs to be done?' \n                    autoFocus\n                    onChange={this.onLabelChange}\n                    onKeyDown={this.onKeyDown}\n                    value={ this.state.label }\n                    >\n                        \n                    </input>\n        );\n    };\n};\n","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport NewTaskForm from '../new-task-form';\n\n\nconst Header = ( {addItem} ) => {\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <NewTaskForm addItem={ addItem } /> \n        </header>\n    );\n};\n\nexport default Header;","import Task from './task';\n\nexport default Task;","import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport './task';\n\n\nexport default class Task extends Component {\n\n  render () {\n\n    const { label, addingDate, id, done, editing, itemDestroy, onToggleDone, itemEdit } = this.props;\n\n    let taskClass = null;\n\n    if (done) taskClass = 'completed';\n    if (editing) taskClass = 'editing';\n     \n\n    return (\n        <li className={taskClass}>\n            <div className=\"view\">\n              <input className=\"toggle\" type=\"checkbox\" \n                    onClick={() => onToggleDone(id)}\n              ></input>\n              <label>\n                <span className=\"description\">{label}</span>\n                <span className=\"created\">{formatDistanceToNow(addingDate)}</span>\n              </label>\n              <button className=\"icon icon-edit\"\n                      onClick={ () => itemEdit(id) }\n              ></button>\n              <button className=\"icon icon-destroy\"\n                      onClick={() => itemDestroy(id)}\n                      ></button>\n            </div>\n            { editing ? <input type=\"text\" className=\"edit\" defaultValue={label}></input> : null }\n          </li>\n    );\n  };\n};\n","import TaskList from './task-list';\n\nexport default TaskList;","import React from 'react';\nimport './task-list.css';\n\nimport Task from '../task';\n\nconst TaskList = ( { todos, itemDestroy, onToggleDone, itemEdit, filterValue } ) => {\n    \n    const filter = (val) => {\n        switch (val) {\n            case 'Active':\n                return todos.filter(item => !item.done);\n            \n            case 'Completed':\n                return todos.filter(item => item.done);\n            \n            default:\n                return todos;\n        }\n    };\n    \n    const filteredArr = filter(filterValue);\n    \n    const items = filteredArr.map((item) => {\n        const {id, ...props } = item;\n        return <Task key={id} {...props} \n                    itemDestroy={ () => itemDestroy(id) } \n                    onToggleDone={ () => onToggleDone(id) }\n                    itemEdit={ () => itemEdit(id) }\n                />\n    });\n\n\n\n    return (\n        <ul className=\"todo-list\">\n            {items}\n        </ul>\n    );\n};\n\nexport default TaskList;","import Filters from './filters';\n\nexport default Filters;","import React, { Component } from 'react';\n\nimport './filters.css';\n\nexport default class Filters extends Component {\n\n    // state = {\n    //     items: [\n    //         { id: 1, active: false },\n    //         { id: 2, active: false },\n    //         { id: 3, active: false },\n    //     ]\n    // }\n\n    // toggleClass = ( id ) => {\n    //     this.setState(({items}) => {\n    //         const idx = item.findIndex(item => item.id = 1);\n\n    //         const oldItem = items[idx];\n    //         const newItem = { ...oldItem, active: !oldItem.active };\n    //         const newArr = [ ...items.slice(0, idx),\n    //                             newItem,\n    //                             ...items.slice(idx + 1)                \n    //         ];\n\n    //         return {\n    //             items: newArr\n    //         }\n    //     });\n    // }\n\n    onFilterClick = (event) => {\n        this.props.changeFilter(event.target.innerText);\n\n        \n    }\n\n    render() {\n        return (\n            <ul className=\"filters\"\n                onClick={ this.onFilterClick }\n            >\n                <li>\n                    <button className=\"selected\"\n                    >All</button>\n                </li>\n                <li>\n                    <button>Active</button>\n                </li>\n                 <li>\n                    <button>Completed</button>\n                </li>\n            </ul>\n        );\n    };\n};\n\n","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\nimport './footer.css';\n\nimport Filters from '../filters';\n\nconst Footer = ({ todoCount, clearComplete, changeFilter }) => {\n    \n    return (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">{ todoCount } items left</span>\n          <Filters changeFilter={ changeFilter }/>\n          <button className=\"clear-completed\"\n                  onClick={ () => clearComplete() } >Clear completed</button>\n        </footer>\n    );\n};\n\nexport default Footer;","import App from './app';\n\nexport default App;\n\n\n\n","import React, { Component } from 'react';\n\n\nimport './app.css';\n\nimport Header from '../header';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n    \n    currentId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Completed'),\n            this.createTodoItem('Editing'),\n            this.createTodoItem('Active')\n        ],\n        filterValue: 'All'\n    };\n\n    \n    changeFilter = ( filter ) => {\n        this.setState({\n            filterValue: filter\n        });\n    };\n    \n    createTodoItem ( label ) {\n        return {\n            label: label,\n            addingDate: new Date(),\n            id: this.currentId++,\n            done: false,\n            editing: false\n        };\n    };\n\n    addItem = ( text ) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData}) => {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n            return {\n                todoData: newArr\n            };\n        });\n    };\n\n    itemDestroy = (id) => {\n        this.setState(({todoData}) => {\n            const result = todoData.reduce((acc, item) => {\n                if (item.id !== id) {\n                    acc.push(item);\n                }\n                return acc;\n            }, []);\n            return {\n                todoData: result\n            };\n        })\n    };\n\n    itemEdit = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex(item => item.id === id);\n            const oldItem = todoData[idx];\n            const newItem = { ...oldItem, editing: !oldItem.editing };\n\n            const newArr = [\n                ...todoData.slice(0, idx),\n                newItem,\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArr\n            }\n        });\n    };\n\n    clearComplete = () => {\n        this.setState(({ todoData }) => {\n            const newArr = todoData.filter(item => !item.done)\n            \n            return {\n                todoData: newArr\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(( { todoData } ) => {\n            const idx = todoData.findIndex(item => item.id === id)\n            const oldItem = todoData[idx];\n            const newItem = { ...oldItem, done: !oldItem.done };\n            const newArr = [ \n                    ...todoData.slice(0, idx),\n                    newItem,\n                    ...todoData.slice(idx + 1)\n                ];\n            return {\n                todoData: newArr\n            }\n        });\n    };\n\n    render() {\n        const { todoData, filterValue } = this.state;\n        const todoCount = todoData.length - todoData.filter((item) => item.done).length;\n\n        return <section className=\"todoapp\">\n            <Header addItem={ this.addItem } /> \n            <section className=\"main\">\n                <TaskList todos={ todoData }\n                    filterValue={ filterValue } \n                    itemDestroy={ this.itemDestroy }\n                    onToggleDone={ this.onToggleDone }\n                    itemEdit={ this.itemEdit }\n                 />\n            </section>\n            <Footer todoCount={ todoCount }\n                    clearComplete={ this.clearComplete }\n                    changeFilter={ this.changeFilter }\n            />\n        </section>\n    };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}