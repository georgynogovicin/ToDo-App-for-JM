{"version":3,"sources":["components/new-task-form/index.js","components/new-task-form/new-task-form.js","components/header/index.js","components/header/header.js","components/task/index.js","components/task/task.js","components/task-list/index.js","components/task-list/task-list.js","components/filters/index.js","components/filters/filters.js","components/footer/index.js","components/footer/footer.js","components/app/index.js","components/app/app.js","index.js"],"names":["NewTaskForm","state","label","onLabelChange","event","setState","target","value","onKeyDown","code","props","addItem","className","placeholder","autoFocus","onChange","this","Component","Header","Task","status","addingDate","id","done","itemDestroy","onToggleDone","taskClass","type","onClick","formatDistanceToNow","defaultValue","TaskList","todos","items","map","item","Filters","Footer","todoCount","App","currentId","todoData","createTodoItem","text","newItem","reduce","acc","push","idx","findIndex","oldItem","slice","Date","length","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b2f0a9e.chunk.js","sourcesContent":["import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;","import React, { Component } from 'react';\nimport \"./new-task-form.css\";\n\nexport default class NewTaskForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (event) => {\n        this.setState({\n            label: event.target.value\n        });\n    };\n\n    onKeyDown = (event) => {\n        if (event.code === 'Enter') {\n            if (this.state.label !== '') {\n                this.props.addItem(this.state.label);\n                this.setState({\n                label: ''\n            })\n            }\n        }\n    };\n\n\n    render () {\n\n        return (\n            <input className=\"new-todo\" \n                    placeholder='What needs to be done?' \n                    autoFocus\n                    onChange={this.onLabelChange}\n                    onKeyDown={this.onKeyDown}\n                    value={ this.state.label }\n                    >\n                        \n                    </input>\n        );\n    };\n};\n","import Header from './header';\n\nexport default Header;","import React from 'react';\nimport NewTaskForm from '../new-task-form';\n\n\nconst Header = ( {addItem} ) => {\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <NewTaskForm addItem={ addItem } /> \n        </header>\n    );\n};\n\nexport default Header;","import Task from './task';\n\nexport default Task;","import React, { Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport './task';\n\n\nexport default class Task extends Component {\n\n  render () {\n\n    const { label, status, addingDate, id, done, itemDestroy, onToggleDone } = this.props;\n\n    let taskClass = status;\n\n    if (done) taskClass = 'completed';\n     \n\n    return (\n        <li className={taskClass}>\n            <div className=\"view\">\n              <input className=\"toggle\" type=\"checkbox\" \n                    onClick={() => onToggleDone(id)}\n              ></input>\n              <label>\n                <span className=\"description\">{label}</span>\n                <span className=\"created\">{formatDistanceToNow(addingDate)}</span>\n              </label>\n              <button className=\"icon icon-edit\"></button>\n              <button className=\"icon icon-destroy\"\n                      onClick={() => itemDestroy(id)}\n                      ></button>\n            </div>\n            { status === 'editing' ? <input type=\"text\" className=\"edit\" defaultValue={label}></input> : null }\n          </li>\n    );\n  };\n};\n","import TaskList from './task-list';\n\nexport default TaskList;","import React from 'react';\nimport './task-list.css';\n\nimport Task from '../task';\n\nconst TaskList = ( { todos, itemDestroy, onToggleDone } ) => {\n    const items = todos.map((item) => {\n        const {id, ...props } = item;\n        return <Task key={id} {...props} \n                    itemDestroy={() => itemDestroy(id)} \n                    onToggleDone={() => onToggleDone(id)}\n                />\n    });\n\n\n\n    return (\n        <ul className=\"todo-list\">\n            {items}\n        </ul>\n    );\n};\n\nexport default TaskList;","import Filters from './filters';\n\nexport default Filters;","import React, { Component } from 'react';\n\nimport './filters.css';\n\nexport default class Filters extends Component {\n\n    render() {\n        return (\n            <ul className=\"filters\">\n                <li>\n                    <button className=\"selected\">All</button>\n                </li>\n                <li>\n                    <button>Active</button>\n                </li>\n                 <li>\n                    <button>Completed</button>\n                </li>\n            </ul>\n        );\n    };\n};\n\n","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\nimport './footer.css';\n\nimport Filters from '../filters';\n\nconst Footer = (props) => {\n    \n    const { todoCount } = props;\n    return (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">{ todoCount } items left</span>\n          <Filters />\n          <button className=\"clear-completed\">Clear completed</button>\n        </footer>\n    );\n};\n\nexport default Footer;","import App from './app';\n\nexport default App;\n\n\n\n","import React, { Component } from 'react';\n\n\nimport './app.css';\n\nimport Header from '../header';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n    \n    currentId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Completed'),\n            this.createTodoItem('Editing'),\n            this.createTodoItem('Active')\n        ]\n    };\n\n    \n\n    createTodoItem ( label ) {\n        return {\n            label: label,\n            addingDate: new Date(),\n            id: this.currentId++,\n            done: false\n        };\n    };\n\n    addItem = ( text ) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData}) => {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n            return {\n                todoData: newArr\n            };\n        });\n    };\n\n    itemDestroy = (id) => {\n        this.setState(({todoData}) => {\n            const result = todoData.reduce((acc, item) => {\n                if (item.id !== id) {\n                    acc.push(item);\n                }\n                return acc;\n            }, []);\n            return {\n                todoData: result\n            };\n        })\n    };\n\n    onToggleDone = (id) => {\n        this.setState(( { todoData } ) => {\n            const idx = todoData.findIndex(item => item.id === id)\n            const oldItem = todoData[idx];\n            const newItem = { ...oldItem, done: !oldItem.done };\n            const newArr = [ \n                    ...todoData.slice(0, idx),\n                    newItem,\n                    ...todoData.slice(idx + 1)\n                ];\n            return {\n                todoData: newArr\n            }\n        });\n    };\n\n    render() {\n        const { todoData } = this.state;\n        const todoCount = todoData.length - todoData.filter((item) => item.done).length;\n\n        return <section className=\"todoapp\">\n            <Header addItem={ this.addItem } /> \n            <section className=\"main\">\n                <TaskList todos={ todoData } \n                    itemDestroy={ this.itemDestroy }\n                    onToggleDone={ this.onToggleDone }\n                 />\n            </section>\n            <Footer todoCount={ todoCount } />\n        </section>\n    };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}