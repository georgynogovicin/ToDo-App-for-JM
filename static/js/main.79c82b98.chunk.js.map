{"version":3,"sources":["components/new-task-form/new-task-form.jsx","components/new-task-form/index.js","components/header/header.jsx","components/header/index.js","components/task/task.jsx","components/task/index.js","components/task-list/task-list.jsx","components/task-list/index.js","components/filters/filters.jsx","components/filters/index.js","components/footer/footer.jsx","components/footer/index.js","components/app/index.js","components/app/app.jsx","index.jsx"],"names":["NewTaskForm","state","label","onLabelChange","event","setState","target","value","onKeyDown","addItem","props","code","this","className","placeholder","onChange","Component","defaultProps","Header","Task","addingDate","id","done","editing","itemDestroy","onToggleDone","itemEdit","taskClass","type","onClick","formatDistanceToNow","aria-label","defaultValue","Date","TaskList","todos","items","val","filter","item","filterValue","map","Filters","onFilterClick","changeFilter","dataset","role","data-value","Footer","todoCount","clearComplete","App","currentId","todoData","createTodoItem","text","newItem","reduce","acc","push","idx","findIndex","oldItem","slice","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c82b98.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './new-task-form.css';\nimport PropTypes from 'prop-types';\n\nexport default class NewTaskForm extends Component {\n  static defaultProps = {\n    addItem: () => {},\n  };\n\n  static propTypes = {\n    addItem: PropTypes.func,\n  };\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (event) => {\n    this.setState({\n      label: event.target.value,\n    });\n  };\n\n  onKeyDown = (event) => {\n    const { label } = this.state;\n    const { addItem } = this.props;\n    if (event.code === 'Enter') {\n      if (label !== '') {\n        addItem(label);\n        this.setState({\n          label: '',\n        });\n      }\n    }\n  };\n\n  render() {\n    const { label } = this.state;\n    return (\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        onChange={this.onLabelChange}\n        onKeyDown={this.onKeyDown}\n        value={label}\n      />\n    );\n  }\n}\n","import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NewTaskForm from '../new-task-form';\n\nconst Header = ({ addItem }) => {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <NewTaskForm addItem={addItem} />\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  addItem: () => {},\n};\n\nHeader.propTypes = {\n  addItem: PropTypes.func,\n};\n\nexport default Header;\n","import Header from './header';\n\nexport default Header;\n","import React from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport './task.css';\n\nconst Task = ({ label, addingDate, id, done, editing, itemDestroy, onToggleDone, itemEdit }) => {\n  let taskClass = null;\n\n  if (done) taskClass = 'completed';\n  if (editing) taskClass = 'editing';\n\n  return (\n    <li className={taskClass}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" onClick={() => onToggleDone(id)} />\n        <label>\n          <span className=\"description\">{label}</span>\n          <span className=\"created\">{formatDistanceToNow(addingDate)}</span>\n        </label>\n        <button type=\"button\" aria-label=\"Edit\" className=\"icon icon-edit\" onClick={() => itemEdit(id)} />\n        <button type=\"button\" aria-label=\"Delete\" className=\"icon icon-destroy\" onClick={() => itemDestroy(id)} />\n      </div>\n      {editing ? <input type=\"text\" className=\"edit\" defaultValue={label} /> : null}\n    </li>\n  );\n};\n\nTask.defaultProps = {\n  label: 'Active',\n  done: false,\n  editing: false,\n  addingDate: new Date(),\n};\n\nTask.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  done: PropTypes.bool,\n  editing: PropTypes.bool,\n  addingDate: PropTypes.instanceOf(Date),\n  itemDestroy: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  itemEdit: PropTypes.func.isRequired,\n};\n\nexport default Task;\n","import Task from './task';\n\nexport default Task;\n","import React from 'react';\nimport './task-list.css';\nimport PropTypes from 'prop-types';\n\nimport Task from '../task';\n\nconst TaskList = ({ todos, itemDestroy, onToggleDone, itemEdit, filterValue }) => {\n  const filter = (val) => {\n    switch (val) {\n      case 'Active':\n        return todos.filter((item) => !item.done);\n\n      case 'Completed':\n        return todos.filter((item) => item.done);\n\n      default:\n        return todos;\n    }\n  };\n\n  const filteredArr = filter(filterValue);\n\n  const items = filteredArr.map((item) => {\n    const { id, ...props } = item;\n    return (\n      <Task\n        key={id}\n        id={id}\n        {...props}\n        itemDestroy={() => itemDestroy(id)}\n        onToggleDone={() => onToggleDone(id)}\n        itemEdit={() => itemEdit(id)}\n      />\n    );\n  });\n\n  return <ul className=\"todo-list\">{items}</ul>;\n};\n\nTaskList.defaultProps = {\n  filterValue: 'All',\n  label: 'Active',\n};\n\nTaskList.propTypes = {\n  todos: PropTypes.instanceOf(Array).isRequired,\n  itemDestroy: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  itemEdit: PropTypes.func.isRequired,\n  filterValue: PropTypes.string,\n  label: PropTypes.string,\n};\n\nexport default TaskList;\n","import TaskList from './task-list';\n\nexport default TaskList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './filters.css';\n\nexport default class Filters extends Component {\n  static defaultProps = {\n    filterValue: 'All',\n    changeFilter: () => {},\n  };\n\n  static propTypes = {\n    filterValue: PropTypes.string,\n    changeFilter: PropTypes.func,\n  };\n\n  onFilterClick = (event) => {\n    const { changeFilter } = this.props;\n    changeFilter(event.target.dataset.value);\n  };\n\n  render() {\n    const { filterValue } = this.props;\n\n    return (\n      <ul className=\"filters\" onClick={this.onFilterClick} onKeyDown={() => {}} role=\"presentation\">\n        <li>\n          <button type=\"button\" className={filterValue === 'All' ? 'selected' : ''} data-value=\"All\">\n            All\n          </button>\n        </li>\n        <li>\n          <button type=\"button\" className={filterValue === 'Active' ? 'selected' : ''} data-value=\"Active\">\n            Active\n          </button>\n        </li>\n        <li>\n          <button type=\"button\" className={filterValue === 'Completed' ? 'selected' : ''} data-value=\"Completed\">\n            Completed\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n","import Filters from './filters';\n\nexport default Filters;\n","import React from 'react';\nimport './footer.css';\nimport PropTypes from 'prop-types';\n\nimport Filters from '../filters';\n\nconst Footer = ({ todoCount, clearComplete, changeFilter, filterValue }) => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{todoCount} items left</span>\n      <Filters changeFilter={changeFilter} filterValue={filterValue} />\n      <button type=\"button\" className=\"clear-completed\" onClick={() => clearComplete()}>\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.defaultProps = {\n  todoCount: 0,\n  clearComplete: () => {},\n  changeFilter: () => {},\n  filterValue: 'All',\n};\n\nFooter.propTypes = {\n  todoCount: PropTypes.number,\n  clearComplete: PropTypes.func,\n  changeFilter: PropTypes.func,\n  filterValue: PropTypes.string,\n};\n\nexport default Footer;\n","import Footer from './footer';\n\nexport default Footer;\n","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport './app.css';\n\nimport Header from '../header';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n  currentId = 100;\n\n  state = {\n    todoData: [this.createTodoItem('Completed'), this.createTodoItem('Editing'), this.createTodoItem('Active')],\n    filterValue: 'All',\n  };\n\n  changeFilter = (filter) => {\n    this.setState({\n      filterValue: filter,\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newItem];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  itemDestroy = (id) => {\n    this.setState(({ todoData }) => {\n      const result = todoData.reduce((acc, item) => {\n        if (item.id !== id) {\n          acc.push(item);\n        }\n        return acc;\n      }, []);\n      return {\n        todoData: result,\n      };\n    });\n  };\n\n  itemEdit = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((item) => item.id === id);\n      const oldItem = todoData[idx];\n      const newItem = { ...oldItem, editing: !oldItem.editing };\n\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  clearComplete = () => {\n    this.setState(({ todoData }) => {\n      const newArr = todoData.filter((item) => !item.done);\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((item) => item.id === id);\n      const oldItem = todoData[idx];\n      const newItem = { ...oldItem, done: !oldItem.done };\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  createTodoItem(label) {\n    return {\n      label,\n      addingDate: new Date(),\n      id: this.currentId + Math.floor(Math.random() * 100),\n      done: false,\n      editing: false,\n    };\n  }\n\n  render() {\n    const { todoData, filterValue } = this.state;\n    const todoCount = todoData.length - todoData.filter((item) => item.done).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addItem={this.addItem} />\n        <section className=\"main\">\n          <TaskList\n            todos={todoData}\n            filterValue={filterValue}\n            itemDestroy={this.itemDestroy}\n            onToggleDone={this.onToggleDone}\n            itemEdit={this.itemEdit}\n          />\n        </section>\n        <Footer\n          todoCount={todoCount}\n          clearComplete={this.clearComplete}\n          changeFilter={this.changeFilter}\n          filterValue={filterValue}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}